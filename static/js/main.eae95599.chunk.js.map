{"version":3,"sources":["images/slide1.jpg","images/slide2.jpg","images/slide3.jpg","components/layout/Header.jsx","components/home/CarouselContent.jsx","components/home/Carousel.jsx","components/pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","CarouselContent","information","slide","altmessage","type","home_Carousel","id","data-ride","data-target","data-slide-to","src","slide1","alt","components_home_CarouselContent","slide2","slide3","role","data-slide","aria-hidden","Home","App","components_layout_Header","pages_Home","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eae95599.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide1.ec54f1ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.52bb4587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.170fbc69.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                TODAY\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                SEARCH\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                VENUES\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                ADD SPECIAL\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                NEARBY NOW\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"Food Hunt\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./CarouselContent.css\";\nimport PropTypes from \"prop-types\";\n\nconst CarouselContent = props => {\n  const { information, slide, altmessage } = props;\n  return (\n    <div className=\"carousel-caption\">\n      <h1>{information}</h1>\n      <div className=\"row\">\n        <div className=\"col\" />\n        <div className=\"col\">\n          <button type=\"button\" className=\"btn-block btn-success\">\n            Get Info\n          </button>\n        </div>\n        <div className=\"col\">\n          <button type=\"button\" className=\"btn-block btn-danger\">\n            Hunt Now\n          </button>\n        </div>\n        <div className=\"col\" />\n      </div>\n    </div>\n  );\n};\n\nCarouselContent.defaultProps = {\n  information: \"Need information here.\"\n};\n\nCarouselContent.propTypes = {\n  information: PropTypes.string.isRequired\n};\n\nexport default CarouselContent;\n","import React from \"react\";\nimport slide1 from \"../../images/slide1.jpg\";\nimport slide2 from \"../../images/slide2.jpg\";\nimport slide3 from \"../../images/slide3.jpg\";\nimport \"./Carousel.css\";\nimport Contents from \"./CarouselContent\";\n\nexport default props => {\n  return (\n    <div\n      id=\"carouselExampleIndicators\"\n      className=\"carousel slide\"\n      data-ride=\"carousel\"\n    >\n      <ol className=\"carousel-indicators\">\n        <li\n          data-target=\"#carouselExampleIndicators\"\n          data-slide-to=\"0\"\n          className=\"active\"\n        />\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\" />\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\" />\n      </ol>\n      <div className=\"carousel-inner\">\n        <div className=\"carousel-item active\">\n          <div className=\"image\">\n            <img src={slide1} alt=\"First Slide\" className=\"d-block w-100\" />\n          </div>\n          <Contents information=\"Street Food Arriving!\" />\n        </div>\n        <div className=\"carousel-item\">\n          <div className=\"image\">\n            <img src={slide2} alt=\"Second Slide\" className=\"d-block w-100\" />\n          </div>\n          <Contents information=\"Free Indian Food!\" />\n        </div>\n        <div className=\"carousel-item\">\n          <div className=\"image\">\n            <img src={slide3} alt=\"Third Slide\" className=\"d-block w-100\" />\n          </div>\n          <Contents information=\"Free Food Again!!!\" />\n        </div>\n      </div>\n      <a\n        className=\"carousel-control-prev\"\n        href=\"#carouselExampleIndicators\"\n        role=\"button\"\n        data-slide=\"prev\"\n      >\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Previous</span>\n      </a>\n      <a\n        className=\"carousel-control-next\"\n        href=\"#carouselExampleIndicators\"\n        role=\"button\"\n        data-slide=\"next\"\n      >\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n        <span className=\"sr-only\">Next</span>\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Link } from \"react-rourter-dom\";\nimport Carousel from \"../home/Carousel\";\n\nconst Home = props => {\n  return <Carousel />;\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Home from \"./components/pages/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Food Hunt\" />\n          <div className=\"container\">\n            <Home />\n            <Switch>\n              <Router exact path=\"/\" component={Home} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}